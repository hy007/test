对个对象共享一个成员变量，用static修饰
set集合：不包含重复元素
		for循环不能遍历Set集合
	set集合的特点
Collection 
	|--List
		有序（存储顺序和取出顺序的一致性），可重复的
	|--Set
		无序（存储顺序和取出顺序不一致）,唯一 
		虽然set集合的元素无序，作为集合来说，有自己的存储顺序
	HashSet：他不保证set的迭代顺序；特别是他不保证该顺序恒久不变
HashSet集合的源码
	利用字符串相同hashcode()相同和地址值相同、和元素值的原则来判断元素是否相同
哈希表：是一个元素为链表的数组。综合了数组和链表的好处
在HashSet保证元素的唯一性
	重写hashCode()值 return this.hashCode()+this.age*12
HashSet集合的底层是哈希表。
而哈希表结构底层依赖hashCode()和quals()方法
所以在判断两个队形是否为同一对象的时候应重写这两个方法，自动生成
LinkedHashSet：是HashSet的集合，具有可以预知的哈希表和链表实现	
	底层数据结构有哈希表和链表组成
	哈希表保证元素的唯一性
	链表保证元素的有素性(存储和取出时一致的)
	TreeSet集合：能够对元素进行排序		
	构造方法：
		A:使用元素的自然片排序
			public TreeSet(Comparator<? super E> comparator)构造一个新的空 TreeSet，它根据指定比较器进行排序自然排序：
		B:比较器排序
			public TreeSet()构造一个新的空 set，该 set 根据其元素的自然顺序进行排序。
	真正的比较依赖于元素的compareTo()方法，而这个方法是定义在Comparable里面的
	所以想重写该方法，就必须先Comparable接口。这个接口表示的就是自然排序。
	自然排序
	成员变量值都相同即为同一元素
	如果一个类的元素想要实现自然排序必须实现自然排序的接口Comparable<T>
	唯一性：根据比较的返回师傅为0来决定
	排序：
		自然排序：
			让元素的类实现自然排序接口Comparable
		比较器排序：
			让集合的构造方法接受一个比较器接口子类对象Comparable
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	